{"version":3,"sources":["TabPanel/RepoItem/index.js","TabPanel/styles.js","TabPanel/index.js","App.js","reportWebVitals.js","index.js"],"names":["RepoItem","props","repo","full_name","id","description","stargazers_count","forks_count","html_url","owner","avatar_url","login","Fragment","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","Box","display","mr","justifyContent","Link","href","color","mx","Tooltip","title","arrow","Button","disabled","size","endIcon","Star","CallSplit","secondary","ListItemSecondaryAction","component","variant","GitHub","Typography","Divider","FullWidthAlert","styled","Alert","CustomList","List","TabPanel","children","value","index","language","other","useState","page","setPage","search","setSearch","loading","setLoading","hasError","setHasError","results","setResults","loadData","useCallback","searchText","clearResults","url","searchKey","axios","get","params","per_page","sort","order","then","items","data","updatedResults","catch","error","console","useEffect","handleChange","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","event","target","role","hidden","aria-labelledby","p","OutlinedInput","type","fullWidth","placeholder","onChange","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","ev","Search","width","my","severity","action","AlertTitle","length","dataLength","next","hasMore","scrollableTarget","map","repoData","disableTypography","label","CircularProgress","availablesLanguages","App","setValue","flexDirection","gutterBottom","Paper","square","Tabs","indicatorColor","textColor","newValue","scrollButtons","Tab","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cca9d55f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  Divider,\r\n  ListItemSecondaryAction,\r\n  Link,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { GitHub, Star, CallSplit } from \"@material-ui/icons\";\r\n\r\nfunction RepoItem(props) {\r\n  const { repo } = props;\r\n  const {\r\n    full_name,\r\n    id,\r\n    description,\r\n    stargazers_count,\r\n    forks_count,\r\n    html_url,\r\n    owner: { avatar_url, login },\r\n  } = repo;\r\n  return (\r\n    <React.Fragment key={id}>\r\n      <ListItem alignItems=\"flex-start\">\r\n        <ListItemAvatar>\r\n          <Avatar alt={login} src={avatar_url} />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={\r\n            <Box display=\"flex\">\r\n              <Box\r\n                display=\"flex\"\r\n                mr={3}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Link href={html_url} color=\"inherit\">\r\n                  {full_name}\r\n                </Link>\r\n              </Box>\r\n\r\n              <Box display=\"flex\" mx={1}>\r\n                <Tooltip title=\"Stars\" arrow>\r\n                  <span>\r\n                    <Button disabled size=\"small\" endIcon={<Star />}>\r\n                      {stargazers_count}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Box>\r\n              <Box display=\"flex\" mx={1}>\r\n                <Tooltip title=\"Forks\" arrow>\r\n                  <span>\r\n                    <Button disabled size=\"small\" endIcon={<CallSplit />}>\r\n                      {forks_count}\r\n                    </Button>\r\n                  </span>\r\n                </Tooltip>\r\n              </Box>\r\n            </Box>\r\n          }\r\n          secondary={description}\r\n        />\r\n        <ListItemSecondaryAction>\r\n          <Link href={html_url} component=\"button\" variant=\"body2\">\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Box mr={1}>\r\n                <GitHub />\r\n              </Box>\r\n              <Typography variant=\"caption\">Check repo</Typography>\r\n            </Box>\r\n          </Link>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRepoItem.propTypes = {\r\n  repo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RepoItem;\r\n","import styled from \"styled-components\";\r\nimport { List } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nexport const FullWidthAlert = styled(Alert)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const CustomList = styled(List)`\r\n  max-height: 600px;\r\n  overflow: auto;\r\n`;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  ListItemText,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { AlertTitle } from \"@material-ui/lab\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport RepoItem from \"./RepoItem\";\r\nimport { FullWidthAlert, CustomList } from \"./styles\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, language, ...other } = props;\r\n  const [page, setPage] = useState(1);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n  const [results, setResults] = useState([]);\r\n\r\n  const loadData = useCallback(\r\n    (page, searchText, clearResults) => {\r\n      if (searchText) {\r\n        setHasError(false);\r\n        setLoading(true);\r\n        const url = `https://api.github.com/search/repositories?q=${searchText}+language:${language.searchKey}`;\r\n        axios\r\n          .get(url, {\r\n            params: {\r\n              per_page: 10,\r\n              page: page,\r\n              sort: \"stars\",\r\n              order: \"desc\",\r\n            },\r\n          })\r\n          .then(({ data }) => {\r\n            const { items } = data;\r\n            const updatedResults = clearResults\r\n              ? items\r\n              : [...results, ...items];\r\n            setResults(updatedResults);\r\n          })\r\n          .catch((error) => {\r\n            setHasError(true);\r\n            console.error(error);\r\n          })\r\n          .then(() => {\r\n            setLoading(false);\r\n          });\r\n      }\r\n    },\r\n    [language.searchKey, results]\r\n  );\r\n\r\n  function debounce(func, wait, immediate) {\r\n    let timeout;\r\n    return function () {\r\n      const context = this,\r\n        args = arguments;\r\n      const later = function () {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      const callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData(page, search, false);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setPage(1);\r\n      setResults([]);\r\n    };\r\n  }, [language]);\r\n\r\n  const handleChange = debounce((event) => {\r\n    setHasError(false);\r\n    setSearch(event.target.value);\r\n    loadData(1, event.target.value, true);\r\n  }, 300);\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={1}>\r\n          <OutlinedInput\r\n            type=\"text\"\r\n            disabled={loading}\r\n            fullWidth\r\n            placeholder=\"Repository name\"\r\n            onChange={handleChange}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"do search\"\r\n                  onClick={(ev) => loadData(1, search, true)}\r\n                >\r\n                  <Search />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {hasError && (\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              width=\"100%\"\r\n              my={2}\r\n            >\r\n              <FullWidthAlert\r\n                severity=\"error\"\r\n                action={\r\n                  <Button color=\"inherit\" size=\"small\">\r\n                    Redo Search\r\n                  </Button>\r\n                }\r\n              >\r\n                <AlertTitle>Ops! Something went wrong</AlertTitle>\r\n                Please try again to search or reload the page!\r\n              </FullWidthAlert>\r\n            </Box>\r\n          )}\r\n          {!hasError && (\r\n            <CustomList id=\"scrollableList\">\r\n              {results.length > 0 && (\r\n                <InfiniteScroll\r\n                  dataLength={results.length}\r\n                  next={() => setPage(page + 1)}\r\n                  hasMore={true}\r\n                  scrollableTarget=\"scrollableList\"\r\n                >\r\n                  {results.map((repoData) => {\r\n                    const { id } = repoData;\r\n                    return <RepoItem key={id} repo={repoData} />;\r\n                  })}\r\n                </InfiniteScroll>\r\n              )}\r\n              {!results.length && search !== \"\" && !loading && (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    disableTypography\r\n                    primary={\r\n                      <Typography color=\"error\">{`No repository found for '${search}' in ${language.label}`}</Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              )}\r\n              {search === \"\" && (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    disableTypography\r\n                    primary={\r\n                      <Typography variant=\"caption\">\r\n                        Write something in the search box to start finding\r\n                        awesome repos\r\n                      </Typography>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              )}\r\n              {loading && !hasError && (\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"center\"\r\n                  alignItems=\"center\"\r\n                  width=\"100%\"\r\n                  my={2}\r\n                >\r\n                  <Box mr={2}>\r\n                    <CircularProgress />\r\n                  </Box>\r\n                  <Typography variant=\"body1\">Loading...</Typography>\r\n                </Box>\r\n              )}\r\n            </CustomList>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default TabPanel;\r\n","import { useState } from \"react\";\r\nimport { Box, Paper, Tabs, Tab, Typography, Link } from \"@material-ui/core\";\r\nimport TabPanel from \"./TabPanel\";\r\n\r\nconst availablesLanguages = [\r\n  {\r\n    label: \"JavaScript\",\r\n    searchKey: \"javascript\",\r\n  },\r\n  {\r\n    label: \"Java\",\r\n    searchKey: \"java\",\r\n  },\r\n  {\r\n    label: \"Python\",\r\n    searchKey: \"python\",\r\n  },\r\n  {\r\n    label: \"CSS\",\r\n    searchKey: \"css\",\r\n  },\r\n  {\r\n    label: \"PHP\",\r\n    searchKey: \"php\",\r\n  },\r\n  {\r\n    label: \"Ruby\",\r\n    searchKey: \"ruby\",\r\n  },\r\n  {\r\n    label: \"C++\",\r\n    searchKey: \"c++\",\r\n  },\r\n  {\r\n    label: \"C\",\r\n    searchKey: \"c\",\r\n  },\r\n  {\r\n    label: \"Shell\",\r\n    searchKey: \"shell\",\r\n  },\r\n  {\r\n    label: \"C#\",\r\n    searchKey: \"c#\",\r\n  },\r\n  {\r\n    label: \"Objective-C\",\r\n    searchKey: \"objective-c\",\r\n  },\r\n  {\r\n    label: \"R\",\r\n    searchKey: \"r\",\r\n  },\r\n  {\r\n    label: \"VimL\",\r\n    searchKey: \"viml\",\r\n  },\r\n  {\r\n    label: \"Go\",\r\n    searchKey: \"go\",\r\n  },\r\n  {\r\n    label: \"Perl\",\r\n    searchKey: \"perl\",\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" p={2}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        GitHub Repo Search\r\n      </Typography>\r\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\r\n        React component that allows searching into the Github API for some repo\r\n        of a language availables. The search is doing while you typing, or you\r\n        can click the search button as well.\r\n      </Typography>\r\n      <Typography variant=\"body1\" component=\"p\" gutterBottom>\r\n        The languages were chosen based on the most repos quantity found{\" \"}\r\n        <Link href=\"https://githut.info\">here</Link>.\r\n      </Typography>\r\n      <Typography variant=\"caption\" component=\"p\" gutterBottom>\r\n        Made with ❤️ by:\r\n        <Link href=\"http://github.com/marciogurka\" color=\"inherit\">\r\n          @marciogurka\r\n        </Link>\r\n      </Typography>\r\n      <Paper square>\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n        >\r\n          {availablesLanguages.map((language) => (\r\n            <Tab label={language.label} key={language.label} />\r\n          ))}\r\n        </Tabs>\r\n        {availablesLanguages.map((language, i) => (\r\n          <TabPanel\r\n            value={value}\r\n            index={i}\r\n            language={language}\r\n            key={language.searchKey}\r\n          />\r\n        ))}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}